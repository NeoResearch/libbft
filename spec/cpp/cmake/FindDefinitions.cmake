MACRO(ADD_MY_DEFINITIONS)
    message(STATUS "Adding definitiions")
    # https://developers.redhat.com/blog/2018/03/21/compiler-and-linker-flags-gcc/
    # https://caiorss.github.io/C-Cpp-Notes/compiler-flags-options.html
    add_definitions(-std=c++17)
    #add_definitions(-fconcepts)
    add_definitions(-fpermissive)
    add_definitions(-fasynchronous-unwind-tables)

    #add_definitions(-fno-rtti)
    add_definitions(-pedantic-errors)
    add_definitions(-pipe)

    add_definitions(-W)
    add_definitions(-Wall)
    add_definitions(-Wconversion)
    add_definitions(-Wcast-align)
    add_definitions(-Wextra)
    #add_definitions(-Werror)
    add_definitions(-Werror=format-security)
    add_definitions(-Werror=implicit-function-declaration)
    add_definitions(-Wpedantic)
    add_definitions(-Wno-long-long)
    add_definitions(-Wno-missing-braces)
    add_definitions(-Wno-parentheses)
    add_definitions(-Wno-switch)
    add_definitions(-Wno-unused-parameter)
    add_definitions(-Wold-style-cast)
    add_definitions(-Wpointer-arith)
    add_definitions(-Wshadow)
    #add_definitions(-Wswitch-default)
    #add_definitions(-Wswitch-enum)
    add_definitions(-Wcast-qual)
    #add_definitions(-Wundef)
    add_definitions(-Wunused)
    add_definitions(-Wunreachable-code)
    add_definitions(-Wunused-function)
    add_definitions(-Wunused-variable)
    add_definitions(-Wwrite-strings)

    set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wmissing-prototypes")

    string(TOLOWER "${CMAKE_BUILD_TYPE}" build_type)
    if (build_type STREQUAL "debug")
        message(STATUS "--- Debug build ---")
        add_definitions(-g)
        add_definitions(-grecord-gcc-switches)
        #    add_definitions(-D_GLIBCXX_DEBUG) # Not sure why it's breaking the mainRPC.cpp build
        #    add_definitions(-D_GLIBCXX_DEBUG_PEDANTIC) # Not sure why it's breaking the mainRPC.cpp build
        add_definitions(-D_FORTIFY_SOURCE=2)
        add_definitions(-D_GLIBCXX_ASSERTIONS)
        add_definitions(-ggdb)
        add_definitions(-O0)
        add_definitions(-fstack-protector-all)

        SET(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -fsanitize=undefined")
    else ()
        message(STATUS "--- Release build ---")
        add_definitions(-O3)
        #    add_definitions(-Ofast)
        add_definitions(-finline-functions)
        add_definitions(-funroll-loops)

        set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -frecursive")
    endif ()
ENDMACRO()

MACRO(ADD_TEST_DEFINITIONS)
    message(STATUS "Adding test definitions")

    string(TOLOWER "${CMAKE_BUILD_TYPE}" build_type)
    if (build_type STREQUAL "debug")
        message(STATUS "--- Debug build ---")
        message(STATUS "Adding sanitizer")
        add_definitions(-fsanitize=address)
        add_definitions(-fsanitize=alignment)
        add_definitions(-fsanitize=bool)
        add_definitions(-fsanitize=bounds)
        add_definitions(-fsanitize=bounds-strict)
        add_definitions(-fsanitize=builtin)
        add_definitions(-fsanitize=enum)
        add_definitions(-fsanitize=float-divide-by-zero)
        add_definitions(-fsanitize=float-cast-overflow)
        add_definitions(-fsanitize=integer-divide-by-zero)
        add_definitions(-fsanitize=leak)
        #    add_definitions(-fsanitize=kernel-address)
        add_definitions(-fsanitize=nonnull-attribute)
        add_definitions(-fsanitize=null)
        add_definitions(-fsanitize=object-size)
        add_definitions(-fsanitize=pointer-compare)
        add_definitions(-fsanitize=pointer-overflow)
        add_definitions(-fsanitize=pointer-subtract)
        add_definitions(-fsanitize=return)
        add_definitions(-fsanitize=returns-nonnull-attribute)
        add_definitions(-fsanitize=signed-integer-overflow)
        add_definitions(-fsanitize=shift)
        add_definitions(-fsanitize=shift-base)
        add_definitions(-fsanitize=shift-exponent)
        #    add_definitions(-fsanitize=thread)
        add_definitions(-fsanitize=undefined)
        add_definitions(-fsanitize=unreachable)
        add_definitions(-fsanitize=vla-bound)
        add_definitions(-fsanitize=vptr)
    endif ()
ENDMACRO()
